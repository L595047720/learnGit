git add +”文件名“
git commit -m +"提交，并写上说明，方便下次查看"
cat 文件名。  查看文件内容
        查看当前状态：
git status命令可以让我们时刻掌握仓库当前的状态，上面的命令输出告诉我们，readme.txt被修改过了，但还没有准备提交的修改。
	
虽然Git告诉我们readme.txt被修改了，但如果能看看具体修改了什么内容，自然是很好的。比如你休假两周从国外回来，第一天上班时，已经记不清上次怎么修改的readme.txt，所以，需要用git diff这个命令看看：
git status   	 【查看文件是否被修改过但还没提交】
git diff +”文件名“		【查看文件修改前后的内容】

要随时掌握工作区的状态，使用git status命令。
如果git status告诉你有文件被修改过，用git diff可以查看修改内容。
       		    版本回退：
git log 查看历史提交版本，可以在后缀加上--pretty=oneline，表示用一行显示一个版本 
git reset --hard HEAD^(^ 回退一个版本，^^  回退两个版本，HEAD~3, 回退三个版本）
git reflog  	记录每一次的命令，可以找到之前所有版本的commit id
git reset --hard (commit id),回退到该id版本

git checkout -- file   放弃文件修改，自动回退到上次提交的add或者commit状态
git reset HEAD <file>可以把暂存区的修改撤销掉（unstage），从暂存区重新放回工作区

加到add暂存区，然后再修改，再次修改的内容如果不要，可以用git checkout -- file 把它删除，它会自动更新为你之前存入add时的版本
		    撤回小结：
场景1：当你改乱了工作区某个文件的内容，想直接丢弃工作区的修改时，用命令git checkout -- file。
场景2：当你不但改乱了工作区某个文件的内容，还添加到了暂存区时，想丢弃修改，分两步，第一步用命令git reset HEAD <file>，就回到了场景1，第二步按场景1操作。
场景3：已经提交了不合适的修改到版本库时，想要撤销本次提交，参考版本回退一节，不过前提是没有推送到远程库。

rm 文件名， 删除文件， commit -m ，从版本库中彻底删除，要恢复可找到以前保存的版本id，然后git reset --hard (commit id),回退到该id版本


















